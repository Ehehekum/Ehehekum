-- ðŸ”” Dual Notification System (Info + Option)
-- Upload to GitHub and load with loadstring

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")

getgenv().NotificationsEnabled = true

-- ScreenGui
local screenGui = gui:FindFirstChild("CustomNotificationGui") or Instance.new("ScreenGui")
screenGui.Name = "CustomNotificationGui"
screenGui.IgnoreGuiInset = true
screenGui.ResetOnSpawn = false
screenGui.Parent = gui

-- Base function (creates a styled notification frame)
local function CreateBaseFrame(height)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 340, 0, height or 90)
    frame.Position = UDim2.new(1, 360, 1, -140)
    frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    frame.BorderSizePixel = 0
    frame.BackgroundTransparency = 0.15
    frame.AnchorPoint = Vector2.new(1, 1)
    frame.Parent = screenGui
    frame.ClipsDescendants = true
    frame.ZIndex = 20

    local UICorner = Instance.new("UICorner", frame)
    UICorner.CornerRadius = UDim.new(0, 12)

    local UIStroke = Instance.new("UIStroke", frame)
    UIStroke.Color = Color3.fromRGB(90, 90, 90)
    UIStroke.Thickness = 1.5

    return frame
end

-- Slide in/out animation
local function AnimateFrame(frame, duration, stayOpen)
    TweenService:Create(frame, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        Position = UDim2.new(1, -12, 1, -140)
    }):Play()

    if not stayOpen then
        task.delay(duration or 5, function()
            TweenService:Create(frame, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
                Position = UDim2.new(1, 360, 1, -140)
            }):Play()
            task.delay(0.5, function()
                if frame then frame:Destroy() end
            end)
        end)
    end
end

-- Notification Info (just text)
getgenv().NotifyInfo = function(opts)
    if not getgenv().NotificationsEnabled then return end

    local frame = CreateBaseFrame(90)

    local titleLabel = Instance.new("TextLabel", frame)
    titleLabel.Size = UDim2.new(1, -20, 0, 28)
    titleLabel.Position = UDim2.new(0, 10, 0, 6)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 19
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextStrokeTransparency = 0
    titleLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Text = opts.Title or "Notification"

    local textLabel = Instance.new("TextLabel", frame)
    textLabel.Size = UDim2.new(1, -20, 0, 46)
    textLabel.Position = UDim2.new(0, 10, 0, 36)
    textLabel.BackgroundTransparency = 1
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextSize = 15
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextStrokeTransparency = 0.3
    textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.TextYAlignment = Enum.TextYAlignment.Top
    textLabel.TextWrapped = true
    textLabel.Text = opts.Text or "Default text"

    AnimateFrame(frame, opts.Duration or 5, false)
end

-- Notification Option (with 2 buttons)
getgenv().NotifyOption = function(opts)
    if not getgenv().NotificationsEnabled then return end

    local frame = CreateBaseFrame(140)

    local titleLabel = Instance.new("TextLabel", frame)
    titleLabel.Size = UDim2.new(1, -20, 0, 28)
    titleLabel.Position = UDim2.new(0, 10, 0, 6)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 19
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextStrokeTransparency = 0
    titleLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Text = opts.Title or "Notification"

    local textLabel = Instance.new("TextLabel", frame)
    textLabel.Size = UDim2.new(1, -20, 0, 46)
    textLabel.Position = UDim2.new(0, 10, 0, 36)
    textLabel.BackgroundTransparency = 1
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextSize = 15
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextStrokeTransparency = 0.3
    textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.TextYAlignment = Enum.TextYAlignment.Top
    textLabel.TextWrapped = true
    textLabel.Text = opts.Text or "Choose an option"

    -- Button 1
    local btn1 = Instance.new("TextButton", frame)
    btn1.Size = UDim2.new(0, 130, 0, 32)
    btn1.Position = UDim2.new(0, 20, 1, -40)
    btn1.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    btn1.Text = (opts.Option1 and opts.Option1.Text) or "Option 1"
    btn1.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn1.TextStrokeTransparency = 0.3
    btn1.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    btn1.Font = Enum.Font.GothamBold
    btn1.TextSize = 15

    local btn1Corner = Instance.new("UICorner", btn1)
    btn1Corner.CornerRadius = UDim.new(0, 8)

    btn1.MouseButton1Click:Connect(function()
        if opts.Option1 and opts.Option1.Callback then
            pcall(opts.Option1.Callback)
        end
        frame:Destroy()
    end)

    -- Button 2
    local btn2 = Instance.new("TextButton", frame)
    btn2.Size = UDim2.new(0, 130, 0, 32)
    btn2.Position = UDim2.new(1, -150, 1, -40)
    btn2.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    btn2.Text = (opts.Option2 and opts.Option2.Text) or "Option 2"
    btn2.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn2.TextStrokeTransparency = 0.3
    btn2.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    btn2.Font = Enum.Font.GothamBold
    btn2.TextSize = 15

    local btn2Corner = Instance.new("UICorner", btn2)
    btn2Corner.CornerRadius = UDim.new(0, 8)

    btn2.MouseButton1Click:Connect(function()
        if opts.Option2 and opts.Option2.Callback then
            pcall(opts.Option2.Callback)
        end
        frame:Destroy()
    end)

    AnimateFrame(frame, nil, true) -- stays open until button clicked
end
