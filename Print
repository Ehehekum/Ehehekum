-- Custom Roblox Notification System
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Default values if not set via getgenv
getgenv().NotificationConfig = getgenv().NotificationConfig or {
    Type = "Info", -- "Info" or "Option"
    Message = "Default Notification: Welcome to Roblox!",
    Duration = 5, -- Duration in seconds (for Info type)
    Icon = "rbxassetid://1234567890", -- Default icon (replace with valid asset ID)
    SoundId = "rbxassetid://9120386446" -- Default sound (Roblox notification sound)
}

-- Create ScreenGui
local function createNotification()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "CustomNotification"
    ScreenGui.Parent = PlayerGui
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    -- Create main frame
    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(0, 300, 0, 100)
    Frame.Position = UDim2.new(1, 20, 0, 50) -- Start off-screen (right)
    Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Frame.BorderSizePixel = 0
    Frame.Parent = ScreenGui
    Frame.ClipsDescendants = true

    -- Add corner rounding
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = Frame

    -- Add gradient
    local UIGradient = Instance.new("UIGradient")
    UIGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 50)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(70, 70, 70))
    }
    UIGradient.Rotation = 45
    UIGradient.Parent = Frame

    -- Add shadow
    local Shadow = Instance.new("ImageLabel")
    Shadow.Size = UDim2.new(1, 10, 1, 10)
    Shadow.Position = UDim2.new(0, -5, 0, -5)
    Shadow.BackgroundTransparency = 1
    Shadow.Image = "rbxassetid://1316045217" -- Roblox shadow asset
    Shadow.ImageTransparency = 0.5
    Shadow.ZIndex = -1
    Shadow.Parent = Frame

    -- Add icon
    local Icon = Instance.new("ImageLabel")
    Icon.Size = UDim2.new(0, 40, 0, 40)
    Icon.Position = UDim2.new(0, 10, 0, 10)
    Icon.BackgroundTransparency = 1
    Icon.Image = getgenv().NotificationConfig.Icon
    Icon.Parent = Frame

    -- Add message
    local Message = Instance.new("TextLabel")
    Message.Size = UDim2.new(0, 230, 0, 60)
    Message.Position = UDim2.new(0, 60, 0, 20)
    Message.BackgroundTransparency = 1
    Message.Text = getgenv().NotificationConfig.Message
    Message.TextColor3 = Color3.fromRGB(255, 255, 255)
    Message.TextSize = 16
    Message.TextWrapped = true
    Message.TextXAlignment = Enum.TextXAlignment.Left
    Message.Font = Enum.Font.SourceSansBold
    Message.Parent = Frame

    -- Play sound
    local Sound = Instance.new("Sound")
    Sound.SoundId = getgenv().NotificationConfig.SoundId
    Sound.Volume = 0.5
    Sound.Parent = Frame
    Sound:Play()

    -- Animation: Slide in
    local tweenIn = TweenService:Create(Frame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        Position = UDim2.new(1, -320, 0, 50) -- Slide to visible position
    })
    tweenIn:Play()

    -- Handle notification type
    if getgenv().NotificationConfig.Type == "Option" then
        -- Add Confirm button
        local ConfirmButton = Instance.new("TextButton")
        ConfirmButton.Size = UDim2.new(0, 80, 0, 30)
        ConfirmButton.Position = UDim2.new(0, 60, 0, 60)
        ConfirmButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
        ConfirmButton.Text = "Confirm"
        ConfirmButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        ConfirmButton.TextSize = 14
        ConfirmButton.Font = Enum.Font.SourceSansBold
        ConfirmButton.Parent = Frame
        local ConfirmCorner = Instance.new("UICorner")
        ConfirmCorner.CornerRadius = UDim.new(0, 5)
        ConfirmCorner.Parent = ConfirmButton

        -- Add Cancel button
        local CancelButton = Instance.new("TextButton")
        CancelButton.Size = UDim2.new(0, 80, 0, 30)
        CancelButton.Position = UDim2.new(0, 150, 0, 60)
        CancelButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
        CancelButton.Text = "Cancel"
        CancelButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        CancelButton.TextSize = 14
        CancelButton.Font = Enum.Font.SourceSansBold
        CancelButton.Parent = Frame
        local CancelCorner = Instance.new("UICorner")
        CancelCorner.CornerRadius = UDim.new(0, 5)
        CancelCorner.Parent = CancelButton

        -- Button functionality
        local function closeNotification()
            local tweenOut = TweenService:Create(Frame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
                Position = UDim2.new(1, 20, 0, 50) -- Slide out
            })
            tweenOut:Play()
            tweenOut.Completed:Connect(function()
                ScreenGui:Destroy()
            end)
        end

        ConfirmButton.MouseButton1Click:Connect(function()
            print("Confirm clicked!")
            closeNotification()
        end)

        CancelButton.MouseButton1Click:Connect(function()
            print("Cancel clicked!")
            closeNotification()
        end)
    else
        -- Info type: Auto-close after duration
        wait(getgenv().NotificationConfig.Duration)
        local tweenOut = TweenService:Create(Frame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
            Position = UDim2.new(1, 20, 0, 50) -- Slide out
        })
        tweenOut:Play()
        tweenOut.Completed:Connect(function()
            ScreenGui:Destroy()
        end)
    end
end

-- Execute the notification
createNotification()
