-- Custom Roblox Notification System (Enhanced)
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local HttpService = game:GetService("HttpService")

-- Default configuration if not set via getgenv
getgenv().NotificationConfig = getgenv().NotificationConfig or {
    Type = "Info", -- "Info" or "Option"
    Message = "Welcome to the Ultimate Notification System!",
    Title = "Notification",
    Duration = 5, -- Duration in seconds (for Info type)
    Icon = "rbxassetid://1234567890", -- Replace with valid decal/image ID
    SoundId = "rbxassetid://9120386446", -- Roblox notification sound
    PrimaryColor = Color3.fromRGB(0, 120, 255), -- Main color for gradient
    SecondaryColor = Color3.fromRGB(0, 80, 200) -- Secondary color for gradient
}

-- Validate and fix icon (decal ID)
local function validateIcon(iconId)
    if iconId and iconId ~= "" then
        -- Ensure the asset is a valid image/decal ID
        local success, result = pcall(function()
            return game:GetService("MarketplaceService"):GetProductInfo(tonumber(iconId:match("%d+")))
        end)
        if success and (result.AssetTypeId == 1 or result.AssetTypeId == 13) then -- 1 = Image, 13 = Decal
            return iconId
        end
    end
    return "rbxassetid://7072706764" -- Fallback to Roblox default icon
end

-- Create notification
local function createNotification()
    -- Create ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "EnhancedNotification"
    ScreenGui.Parent = PlayerGui
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.IgnoreGuiInset = true

    -- Main frame
    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(0, 320, 0, 120)
    Frame.Position = UDim2.new(1, -10, 0, -150) -- Start off-screen (top-right)
    Frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Frame.BorderSizePixel = 0
    Frame.ClipsDescendants = true
    Frame.Parent = ScreenGui

    -- Rounded corners
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 12)
    UICorner.Parent = Frame

    -- Gradient
    local UIGradient = Instance.new("UIGradient")
    UIGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, getgenv().NotificationConfig.PrimaryColor),
        ColorSequenceKeypoint.new(1, getgenv().NotificationConfig.SecondaryColor)
    }
    UIGradient.Rotation = 45
    UIGradient.Parent = Frame

    -- Glowing border
    local UIStroke = Instance.new("UIStroke")
    UIStroke.Thickness = 2
    UIStroke.Color = getgenv().NotificationConfig.PrimaryColor
    UIStroke.Transparency = 0.3
    UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke.Parent = Frame

    -- Shadow
    local Shadow = Instance.new("ImageLabel")
    Shadow.Size = UDim2.new(1, 15, 1, 15)
    Shadow.Position = UDim2.new(0, -7, 0, -7)
    Shadow.BackgroundTransparency = 1
    Shadow.Image = "rbxassetid://1316045217" -- Roblox shadow asset
    Shadow.ImageTransparency = 0.6
    Shadow.ZIndex = -1
    Shadow.Parent = Frame

    -- Title bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = Frame
    local TitleCorner = Instance.new("UICorner")
    TitleCorner.CornerRadius = UDim.new(0, 12)
    TitleCorner.Parent = TitleBar

    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, -10, 1, 0)
    Title.Position = UDim2.new(0, 10, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Text = getgenv().NotificationConfig.Title
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 16
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Font = Enum.Font.GothamBold
    Title.Parent = TitleBar

    -- Icon
    local Icon = Instance.new("ImageLabel")
    Icon.Size = UDim2.new(0, 40, 0, 40)
    Icon.Position = UDim2.new(0, 15, 0, 40)
    Icon.BackgroundTransparency = 1
    Icon.Image = validateIcon(getgenv().NotificationConfig.Icon)
    Icon.Parent = Frame

    -- Message
    local Message = Instance.new("TextLabel")
    Message.Size = UDim2.new(0, 240, 0, 50)
    Message.Position = UDim2.new(0, 65, 0, 35)
    Message.BackgroundTransparency = 1
    Message.Text = getgenv().NotificationConfig.Message
    Message.TextColor3 = Color3.fromRGB(255, 255, 255)
    Message.TextSize = 14
    Message.TextWrapped = true
    Message.TextXAlignment = Enum.TextXAlignment.Left
    Message.Font = Enum.Font.Gotham
    Message.Parent = Frame

    -- Sound
    local Sound = Instance.new("Sound")
    Sound.SoundId = getgenv().NotificationConfig.SoundId
    Sound.Volume = 0.7
    Sound.Parent = Frame
    Sound:Play()

    -- Animations
    local tweenIn = TweenService:Create(Frame, TweenInfo.new(0.6, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Position = UDim2.new(1, -330, 0, 20),
        Size = UDim2.new(0, 320, 0, 120) -- Slight scale-up
    })
    tweenIn:Play()

    -- Progress bar for Info type
    local function createProgressBar()
        local ProgressBar = Instance.new("Frame")
        ProgressBar.Size = UDim2.new(1, -20, 0, 5)
        ProgressBar.Position = UDim2.new(0, 10, 1, -15)
        ProgressBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        ProgressBar.Parent = Frame
        local ProgressCorner = Instance.new("UICorner")
        ProgressCorner.CornerRadius = UDim.new(0, 3)
        ProgressCorner.Parent = ProgressBar

        local Fill = Instance.new("Frame")
        Fill.Size = UDim2.new(0, 0, 1, 0)
        Fill.BackgroundColor3 = getgenv().NotificationConfig.PrimaryColor
        Fill.Parent = ProgressBar
        local FillCorner = Instance.new("UICorner")
        FillCorner.CornerRadius = UDim.new(0, 3)
        FillCorner.Parent = Fill

        local tweenProgress = TweenService:Create(Fill, TweenInfo.new(getgenv().NotificationConfig.Duration, Enum.EasingStyle.Linear), {
            Size = UDim2.new(1, 0, 1, 0)
        })
        tweenProgress:Play()
        return tweenProgress
    end

    -- Close animation
    local function closeNotification()
        local tweenOut = TweenService:Create(Frame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
            Position = UDim2.new(1, -10, 0, 20),
            Size = UDim2.new(0, 300, 0, 110) -- Slight scale-down
        })
        tweenOut:Play()
        tweenOut.Completed:Connect(function()
            ScreenGui:Destroy()
        end)
    end

    -- Handle notification type
    if getgenv().NotificationConfig.Type == "Option" then
        -- Confirm button
        local ConfirmButton = Instance.new("TextButton")
        ConfirmButton.Size = UDim2.new(0, 100, 0, 30)
        ConfirmButton.Position = UDim2.new(0, 65, 0, 80)
        ConfirmButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
        ConfirmButton.Text = "Confirm"
        ConfirmButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        ConfirmButton.TextSize = 14
        ConfirmButton.Font = Enum.Font.GothamBold
        ConfirmButton.Parent = Frame
        local ConfirmCorner = Instance.new("UICorner")
        ConfirmCorner.CornerRadius = UDim.new(0, 8)
        ConfirmCorner.Parent = ConfirmButton

        -- Decline button
        local DeclineButton = Instance.new("TextButton")
        DeclineButton.Size = UDim2.new(0, 100, 0, 30)
        DeclineButton.Position = UDim2.new(0, 175, 0, 80)
        DeclineButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
        DeclineButton.Text = "Decline"
        DeclineButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        DeclineButton.TextSize = 14
        DeclineButton.Font = Enum.Font.GothamBold
        DeclineButton.Parent = Frame
        local DeclineCorner = Instance.new("UICorner")
        DeclineCorner.CornerRadius = UDim.new(0, 8)
        DeclineCorner.Parent = DeclineButton

        -- Button hover effects
        local function addHoverEffect(button)
            button.MouseEnter:Connect(function()
                TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
                    Size = UDim2.new(0, 105, 0, 32)
                }):Play()
            end)
            button.MouseLeave:Connect(function()
                TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
                    Size = UDim2.new(0, 100, 0, 30)
                }):Play()
            end)
        end
        addHoverEffect(ConfirmButton)
        addHoverEffect(DeclineButton)

        -- Button functionality
        ConfirmButton.MouseButton1Click:Connect(function()
            print("Confirm clicked!")
            closeNotification()
        end)
        DeclineButton.MouseButton1Click:Connect(function()
            print("Decline clicked!")
            closeNotification()
        end)
    else
        -- Info type: Auto-close with progress bar
        local progressTween = createProgressBar()
        wait(getgenv().NotificationConfig.Duration)
        progressTween:Cancel()
        closeNotification()
    end
end

-- Execute the notification
createNotification()
