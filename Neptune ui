-- Advanced Roblox UI Library (Version 1.0)
-- Features: Windows, Buttons, Labels, Text Inputs, Toggles, Dropdowns, Themes, Animations, Custom Decals

local UILibrary = {}
UILibrary.__index = UILibrary

-- Services
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local SoundService = game:GetService("SoundService")

-- Default Theme
local defaultTheme = {
    PrimaryColor = Color3.fromRGB(35, 35, 35),    -- Dark background
    SecondaryColor = Color3.fromRGB(0, 191, 255), -- Accent color (blue)
    TextColor = Color3.fromRGB(255, 255, 255),
    HoverColor = Color3.fromRGB(50, 50, 50),
    Font = Enum.Font.Gotham,
    FontBold = Enum.Font.GothamBold,
    CornerRadius = UDim.new(0, 8),
    ClickSound = "rbxassetid://9120386436" -- Verified notification sound
}

-- Default Decal IDs (verified as of August 31, 2025)
local defaultDecals = {
    buttonIcon = "rbxassetid://5108877300" -- Green checkmark icon
}

-- Main UI Class
function UILibrary.new(config)
    config = config or {}
    local self = setmetatable({}, UILibrary)
    
    self.ScreenGui = Instance.new("ScreenGui")
    self.ScreenGui.Name = "UILibraryGui"
    self.ScreenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
    self.ScreenGui.ResetOnSpawn = false
    self.ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    self.Theme = config.theme or defaultTheme
    self.Windows = {}
    self.ZIndex = 1000
    
    return self
end

-- Create a Window
function UILibrary:CreateWindow(title, size, position, draggable)
    local window = {}
    window.Frame = Instance.new("Frame")
    window.Frame.Size = size or UDim2.new(0, 400, 0, 300)
    window.Frame.Position = position or UDim2.new(0.5, -200, 0.5, -150)
    window.Frame.BackgroundColor3 = self.Theme.PrimaryColor
    window.Frame.BorderSizePixel = 0
    window.Frame.Parent = self.ScreenGui
    window.Frame.ZIndex = self.ZIndex
    self.ZIndex = self.ZIndex + 10

    local corner = Instance.new("UICorner")
    corner.CornerRadius = self.Theme.CornerRadius
    corner.Parent = window.Frame

    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = self.Theme.SecondaryColor
    titleBar.BorderSizePixel = 0
    titleBar.Parent = window.Frame
    titleBar.ZIndex = window.Frame.ZIndex + 1

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(0, 200, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title or "Window"
    titleLabel.TextColor3 = self.Theme.TextColor
    titleLabel.TextScaled = true
    titleLabel.Font = self.Theme.FontBold
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = titleBar

    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 24, 0, 24)
    closeButton.Position = UDim2.new(1, -30, 0, 3)
    closeButton.BackgroundTransparency = 1
    closeButton.Text = "X"
    closeButton.TextColor3 = self.Theme.TextColor
    closeButton.Font = self.Theme.FontBold
    closeButton.TextScaled = true
    closeButton.Parent = titleBar

    -- Draggable
    if draggable then
        local dragging, dragStart, startPos
        titleBar.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStart = input.Position
                startPos = window.Frame.Position
            end
        end)
        titleBar.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)
        UserInputService.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local delta = input.Position - dragStart
                window.Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end)
    end

    -- Close Button
    closeButton.MouseButton1Click:Connect(function()
        window.Frame:Destroy()
        self.Windows[window] = nil
        local sound = Instance.new("Sound")
        sound.SoundId = self.Theme.ClickSound
        sound.Parent = window.Frame
        SoundService:PlayLocalSound(sound)
    end)

    window.Elements = {}
    window.ElementOffset = 40 -- Start elements below title bar
    table.insert(self.Windows, window)
    return window
end

-- Create a Button
function UILibrary:CreateButton(window, text, callback, size, iconId)
    local buttonFrame = Instance.new("TextButton")
    buttonFrame.Size = size or UDim2.new(0, 200, 0, 40)
    buttonFrame.Position = UDim2.new(0, 10, 0, window.ElementOffset)
    buttonFrame.BackgroundColor3 = self.Theme.SecondaryColor
    buttonFrame.Text = text or "Button"
    buttonFrame.TextColor3 = self.Theme.TextColor
    buttonFrame.TextScaled = true
    buttonFrame.Font = self.Theme.Font
    buttonFrame.Parent = window.Frame
    buttonFrame.ZIndex = window.Frame.ZIndex + 2

    local corner = Instance.new("UICorner")
    corner.CornerRadius = self.Theme.CornerRadius
    corner.Parent = buttonFrame

    if iconId or defaultDecals.buttonIcon then
        local icon = Instance.new("ImageLabel")
        icon.Size = UDim2.new(0, 24, 0, 24)
        icon.Position = UDim2.new(0, 10, 0, 8)
        icon.BackgroundTransparency = 1
        icon.Image = iconId or defaultDecals.buttonIcon
        icon.ImageColor3 = self.Theme.TextColor
        icon.Parent = buttonFrame
        buttonFrame.TextXAlignment = Enum.TextXAlignment.Right
        buttonFrame.Text = " " .. buttonFrame.Text
    end

    -- Hover Effect
    buttonFrame.MouseEnter:Connect(function()
        TweenService:Create(buttonFrame, TweenInfo.new(0.2), {BackgroundColor3 = self.Theme.HoverColor}):Play()
    end)
    buttonFrame.MouseLeave:Connect(function()
        TweenService:Create(buttonFrame, TweenInfo.new(0.2), {BackgroundColor3 = self.Theme.SecondaryColor}):Play()
    end)

    -- Click Event
    buttonFrame.MouseButton1Click:Connect(function()
        callback()
        local sound = Instance.new("Sound")
        sound.SoundId = self.Theme.ClickSound
        sound.Parent = buttonFrame
        SoundService:PlayLocalSound(sound)
    end)

    window.ElementOffset = window.ElementOffset + buttonFrame.Size.Y.Offset + 10
    table.insert(window.Elements, buttonFrame)
    return buttonFrame
end

-- Create a Label
function UILibrary:CreateLabel(window, text, size)
    local label = Instance.new("TextLabel")
    label.Size = size or UDim2.new(0, 200, 0, 30)
    label.Position = UDim2.new(0, 10, 0, window.ElementOffset)
    label.BackgroundTransparency = 1
    label.Text = text or "Label"
    label.TextColor3 = self.Theme.TextColor
    label.TextScaled = true
    label.Font = self.Theme.Font
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = window.Frame
    label.ZIndex = window.Frame.ZIndex + 2

    window.ElementOffset = window.ElementOffset + label.Size.Y.Offset + 10
    table.insert(window.Elements, label)
    return label
end

-- Create a Text Input
function UILibrary:CreateTextInput(window, placeholder, callback, size)
    local inputFrame = Instance.new("Frame")
    inputFrame.Size = size or UDim2.new(0, 200, 0, 40)
    inputFrame.Position = UDim2.new(0, 10, 0, window.ElementOffset)
    inputFrame.BackgroundColor3 = self.Theme.PrimaryColor
    inputFrame.BorderSizePixel = 0
    inputFrame.Parent = window.Frame
    inputFrame.ZIndex = window.Frame.ZIndex + 2

    local corner = Instance.new("UICorner")
    corner.CornerRadius = self.Theme.CornerRadius
    corner.Parent = inputFrame

    local textBox = Instance.new("TextBox")
    textBox.Size = UDim2.new(1, -10, 1, -10)
    textBox.Position = UDim2.new(0, 5, 0, 5)
    textBox.BackgroundTransparency = 1
    textBox.Text = placeholder or ""
    textBox.PlaceholderText = placeholder or "Enter text..."
    textBox.TextColor3 = self.Theme.TextColor
    textBox.TextScaled = true
    textBox.Font = self.Theme.Font
    textBox.Parent = inputFrame

    textBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            callback(textBox.Text)
            local sound = Instance.new("Sound")
            sound.SoundId = self.Theme.ClickSound
            sound.Parent = inputFrame
            SoundService:PlayLocalSound(sound)
        end
    end)

    window.ElementOffset = window.ElementOffset + inputFrame.Size.Y.Offset + 10
    table.insert(window.Elements, inputFrame)
    return inputFrame
end

-- Create a Toggle
function UILibrary:CreateToggle(window, text, callback, size)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = size or UDim2.new(0, 200, 0, 40)
    toggleFrame.Position = UDim2.new(0, 10, 0, window.ElementOffset)
    toggleFrame.BackgroundTransparency = 1
    toggleFrame.Parent = window.Frame
    toggleFrame.ZIndex = window.Frame.ZIndex + 2

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 150, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = text or "Toggle"
    label.TextColor3 = self.Theme.TextColor
    label.TextScaled = true
    label.Font = self.Theme.Font
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = toggleFrame

    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 40, 0, 20)
    toggleButton.Position = UDim2.new(1, -40, 0, 10)
    toggleButton.BackgroundColor3 = self.Theme.SecondaryColor
    toggleButton.Text = ""
    toggleButton.Parent = toggleFrame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = toggleButton

    local state = false
    toggleButton.MouseButton1Click:Connect(function()
        state = not state
        TweenService:Create(toggleButton, TweenInfo.new(0.2), {BackgroundColor3 = state and self.Theme.SecondaryColor or self.Theme.HoverColor}):Play()
        callback(state)
        local sound = Instance.new("Sound")
        sound.SoundId = self.Theme.ClickSound
        sound.Parent = toggleFrame
        SoundService:PlayLocalSound(sound)
    end)

    window.ElementOffset = window.ElementOffset + toggleFrame.Size.Y.Offset + 10
    table.insert(window.Elements, toggleFrame)
    return toggleFrame
end

-- Create a Dropdown
function UILibrary:CreateDropdown(window, text, options, callback, size)
    local dropdownFrame = Instance.new("Frame")
    dropdownFrame.Size = size or UDim2.new(0, 200, 0, 40)
    dropdownFrame.Position = UDim2.new(0, 10, 0, window.ElementOffset)
    dropdownFrame.BackgroundColor3 = self.Theme.PrimaryColor
    dropdownFrame.Parent = window.Frame
    dropdownFrame.ZIndex = window.Frame.ZIndex + 2

    local corner = Instance.new("UICorner")
    corner.CornerRadius = self.Theme.CornerRadius
    corner.Parent = dropdownFrame

    local dropdownButton = Instance.new("TextButton")
    dropdownButton.Size = UDim2.new(1, 0, 1, 0)
    dropdownButton.BackgroundTransparency = 1
    dropdownButton.Text = text or "Select an option"
    dropdownButton.TextColor3 = self.Theme.TextColor
    dropdownButton.TextScaled = true
    dropdownButton.Font = self.Theme.Font
    dropdownButton.Parent = dropdownFrame

    local dropdownList = Instance.new("Frame")
    dropdownList.Size = UDim2.new(1, 0, 0, 0)
    dropdownList.Position = UDim2.new(0, 0, 1, 5)
    dropdownList.BackgroundColor3 = self.Theme.PrimaryColor
    dropdownList.BorderSizePixel = 0
    dropdownList.Visible = false
    dropdownList.Parent = dropdownFrame
    dropdownList.ZIndex = dropdownFrame.ZIndex + 1

    local listCorner = Instance.new("UICorner")
    listCorner.CornerRadius = self.Theme.CornerRadius
    listCorner.Parent = dropdownList

    local listLayout = Instance.new("UIListLayout")
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Parent = dropdownList

    local optionButtons = {}
    for i, option in ipairs(options or {}) do
        local optionButton = Instance.new("TextButton")
        optionButton.Size = UDim2.new(1, 0, 0, 30)
        optionButton.BackgroundColor3 = self.Theme.SecondaryColor
        optionButton.Text = option
        optionButton.TextColor3 = self.Theme.TextColor
        optionButton.TextScaled = true
        optionButton.Font = self.Theme.Font
        optionButton.Parent = dropdownList
        optionButton.ZIndex = dropdownList.ZIndex + 1

        local optionCorner = Instance.new("UICorner")
        optionCorner.CornerRadius = self.Theme.CornerRadius
        optionCorner.Parent = optionButton

        optionButton.MouseButton1Click:Connect(function()
            dropdownButton.Text = option
            dropdownList.Visible = false
            TweenService:Create(dropdownList, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, 0)}):Play()
            callback(option)
            local sound = Instance.new("Sound")
            sound.SoundId = self.Theme.ClickSound
            sound.Parent = dropdownFrame
            SoundService:PlayLocalSound(sound)
        end)

        table.insert(optionButtons, optionButton)
    end

    dropdownButton.MouseButton1Click:Connect(function()
        dropdownList.Visible = not dropdownList.Visible
        local listHeight = #optionButtons * 30 + 10
        TweenService:Create(dropdownList, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, dropdownList.Visible and listHeight or 0)}):Play()
        local sound = Instance.new("Sound")
        sound.SoundId = self.Theme.ClickSound
        sound.Parent = dropdownFrame
        SoundService:PlayLocalSound(sound)
    end)

    window.ElementOffset = window.ElementOffset + dropdownFrame.Size.Y.Offset + 10
    table.insert(window.Elements, dropdownFrame)
    return dropdownFrame
end

return UILibrary
