-- SimpleTopBar: A clean, right-aligned button and toggle UI library
local SimpleTopBar = {}
SimpleTopBar.__index = SimpleTopBar

-- Services
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local SoundService = game:GetService("SoundService")
local Players = game:GetService("Players")

-- Local player
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SimpleTopBar"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true -- Aligns with Roblox topbar
screenGui.Parent = playerGui

-- UI List Layout for dynamic button/toggle positioning
local uiListLayout = Instance.new("UIListLayout")
uiListLayout.FillDirection = Enum.FillDirection.Horizontal
uiListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
uiListLayout.VerticalAlignment = Enum.VerticalAlignment.Top
uiListLayout.Padding = UDim.new(0, 6) -- Tighter spacing
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder -- Ensure consistent ordering
uiListLayout.Parent = screenGui

-- Animation settings
local tweenInfo = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

-- Button creation
function SimpleTopBar:CreateButton(config)
    local button = Instance.new("ImageButton")
    button.Size = UDim2.new(0, 30, 0, 30)
    button.Position = UDim2.new(0, 0, 0, 36) -- Below Roblox topbar
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.BackgroundTransparency = 0.2 -- Slightly transparent
    button.BorderSizePixel = 0
    button.Image = config.Icon or "rbxassetid://0"
    button.ImageTransparency = 0.1
    button.LayoutOrder = config.LayoutOrder or 0 -- For right-to-left ordering
    button.Parent = screenGui

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 10)
    buttonCorner.Parent = button

    -- Sound
    local soundId = config.SoundId or nil
    local clickSound = soundId and Instance.new("Sound")
    if clickSound then
        clickSound.SoundId = "rbxassetid://" .. soundId
        clickSound.Parent = button
    end

    -- Hover animation
    button.MouseEnter:Connect(function()
        local tween = TweenService:Create(button, tweenInfo, {Size = UDim2.new(0, 32, 0, 32), BackgroundTransparency = 0})
        tween:Play()
    end)
    button.MouseLeave:Connect(function()
        local tween = TweenService:Create(button, tweenInfo, {Size = UDim2.new(0, 30, 0, 30), BackgroundTransparency = 0.2})
        tween:Play()
    end)

    -- Click event
    button.MouseButton1Click:Connect(function()
        if clickSound then
            clickSound:Play()
        end
        if config.Callback then
            config.Callback()
        end
    end)

    return button
end

-- Toggle creation
function SimpleTopBar:CreateToggle(config)
    local toggle = Instance.new("ImageButton")
    toggle.Size = UDim2.new(0, 50, 0, 25)
    toggle.Position = UDim2.new(0, 0, 0, 36) -- Below Roblox topbar
    toggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    toggle.BackgroundTransparency = 0.2
    toggle.BorderSizePixel = 0
    toggle.LayoutOrder = config.LayoutOrder or 0 -- For right-to-left ordering
    toggle.Parent = screenGui

    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 12)
    toggleCorner.Parent = toggle

    -- Toggle indicator
    local indicator = Instance.new("ImageLabel")
    indicator.Size = UDim2.new(0, 21, 0, 21)
    indicator.Position = UDim2.new(0, 2, 0.5, -10.5)
    indicator.BackgroundTransparency = 1
    indicator.Image = config.IconOff or "rbxassetid://0"
    indicator.ImageTransparency = 0.1
    indicator.Parent = toggle

    local state = false

    -- Sound
    local soundId = config.SoundId or nil
    local toggleSound = soundId and Instance.new("Sound")
    if toggleSound then
        toggleSound.SoundId = "rbxassetid://" .. soundId
        toggleSound.Parent = toggle
    end

    -- Toggle logic
    toggle.MouseButton1Click:Connect(function()
        state = not state
        local targetPos = state and UDim2.new(1, -23, 0.5, -10.5) or UDim2.new(0, 2, 0.5, -10.5)
        local targetImage = state and (config.IconOn or "rbxassetid://0") or (config.IconOff or "rbxassetid://0")
        local bgColor = state and Color3.fromRGB(0, 120, 200) or Color3.fromRGB(60, 60, 60)

        -- Animate toggle
        local tweenPos = TweenService:Create(indicator, tweenInfo, {Position = targetPos})
        local tweenColor = TweenService:Create(toggle, tweenInfo, {BackgroundColor3 = bgColor, BackgroundTransparency = state and 0 or 0.2})
        indicator.Image = targetImage
        tweenPos:Play()
        tweenColor:Play()

        if toggleSound then
            toggleSound:Play()
        end

        if config.Callback then
            config.Callback(state)
        end
    end)

    return toggle
end

-- Cleanup function
function SimpleTopBar:Destroy()
    screenGui:Destroy()
end

-- Return the library
return SimpleTopBar
